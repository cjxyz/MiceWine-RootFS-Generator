diff --git a/include/android_stub/vndk/hardware_buffer.h b/include/android_stub/vndk/hardware_buffer.h
index 12f86916844..91d2251e9ef 100644
--- a/include/android_stub/vndk/hardware_buffer.h
+++ b/include/android_stub/vndk/hardware_buffer.h
@@ -24,7 +24,7 @@
 
 __BEGIN_DECLS
 
-const native_handle_t* AHardwareBuffer_getNativeHandle(const AHardwareBuffer* buffer);
+const __native_handle_t* AHardwareBuffer_getNativeHandle(const AHardwareBuffer* buffer);
 
 enum CreateFromHandleMethod {
     // enum values chosen to match internal GraphicBuffer::HandleWrapMethod
@@ -46,7 +46,7 @@ enum CreateFromHandleMethod {
  * clone registered. The AHardwareBuffer will own the cloned handle but not the original.
  */
 int AHardwareBuffer_createFromHandle(const AHardwareBuffer_Desc* desc,
-                                     const native_handle_t* handle, int32_t method,
+                                     const __native_handle_t* handle, int32_t method,
                                      AHardwareBuffer** outBuffer);
 
 /**
diff --git a/src/vulkan/wrapper/wrapper_device_memory.c b/src/vulkan/wrapper/wrapper_device_memory.c
index 6d47a52fd18..1f1846c025f 100644
--- a/src/vulkan/wrapper/wrapper_device_memory.c
+++ b/src/vulkan/wrapper/wrapper_device_memory.c
@@ -13,6 +13,7 @@
 #include <sys/mman.h>
 #include <sys/ioctl.h>
 #include <linux/dma-heap.h>
+#include <fcntl.h>
 
 static int
 safe_ioctl(int fd, unsigned long request, void *arg)
@@ -412,7 +413,7 @@ wrapper_MapMemory2KHR(VkDevice _device,
    assert(mem->dmabuf_fd >= 0 || mem->ahardware_buffer != NULL);
 
    if (mem->ahardware_buffer) {
-      const native_handle_t *handle;
+      const __native_handle_t *handle;
       const int *handle_fds;
 
       handle = AHardwareBuffer_getNativeHandle(mem->ahardware_buffer);
diff --git a/src/vulkan/wrapper/wrapper_physical_device.c b/src/vulkan/wrapper/wrapper_physical_device.c
index fcb2ac60a30..a2a8ac387d1 100644
--- a/src/vulkan/wrapper/wrapper_physical_device.c
+++ b/src/vulkan/wrapper/wrapper_physical_device.c
@@ -9,6 +9,7 @@
 #include "vk_util.h"
 #include "wsi_common.h"
 #include "util/os_misc.h"
+#include <fcntl.h>
 
 static VkResult
 wrapper_setup_device_extensions(struct wrapper_physical_device *pdevice) {
